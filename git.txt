const { init } = require("./routes/codi")

깃 - 깃 레포지토리라고 불리는 데이터 저장소에 소스코드나 리소스를 넣어서 이용
깃허브 - 이런 깃 레포지토리를 인터넷상에서 제공하는 호스팅 서비스

깃 - 이전 상태로 되돌릴수 있다.

### ctrl+` 터미널 열기

1.초기화
git init
git config --global user.name "본인 닉네임"
git config --global user.email "본인 이메일"

### 이전 명령어 복사 '화살표 위쪽'

git config user.name
git config user.email

git status


2.변경사항 더하기(스테이징) git add
git add -A 모든 변경사항을 반영. 좋은 방법 아님.

dog 파일 생성 후
git add dog
git commit -m "add dog file" 

3.변경사항 반영하기 git commit
git commit -m "원하는 메시지"

4.반영사항 확인하기 git log

5.이전 상태로 되돌리기 git reset
로그를 아예 지워버림 - 복구 불가

git reset 커밋번호여섯자리 --hard

5.이전 상태로 되돌리기2 git revert

복구가능

git revert ******
vi에디터가 열리게 되는제 저장하고 닫으려면 :wq

6.깃 브랜치 - 같은 파일로 여러 버전 만들기

마스터 브랜치 - 저장소를 처음 생성하게 되면 Master라는 브랜치를 자동으로 생산
통합 브랜치 - 언제든 배포할수 있는 버전
토픽(피처) 브랜치 - 기능 추가난 버그 수정과 같은 단위 작업을 위한 브랜치
체크아웃 - 작업할 브랜치를 전환하여 작업할 때 사용하는 명령어
헤드 - 현재 사용 중인 브랜치의 선두 부분을 나타내는 이름
스태시stash - 파일의 변경 내용을 일시적으로 기록해두는 영역
머지Merge - 여러 개의 브랜치를 하나로 마아
리베이스Rebase - 정확한 이력을 남겨둬야 할 필요가 없을 경우에 사용하는 머지Merge

7.새로운 브랜치 생성
git branch 브랜치이름


### 터미널 내용 모두 지우는 명령어 clear

